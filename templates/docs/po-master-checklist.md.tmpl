# Product Owner Master Project Setup Checklist

**Project:** {{PROJECT_NAME}} ({{PROJECT_TYPE}})  
**Setup Phase:** Project Initialization  
**Date:** {{DATE}}  
**Validator:** Product Owner Agent  

## Project Type Detection
### Detected Characteristics
- [ ] **Greenfield Project** - New development from scratch
- [ ] **Brownfield Project** - Enhancing existing system
- [ ] **Full-Stack Application** - Frontend + Backend
- [ ] **Backend-Only Service** - API/Service without UI
- [ ] **Frontend-Only Application** - UI without backend
- [ ] **Mobile Application** - iOS/Android development
- [ ] **Hybrid/Other** - [Specify type]

**Project Classification:** [Auto-detected based on codebase analysis]

## Section 1: Stakeholder Alignment
### 1.1 Key Stakeholders
- [ ] Product Owner identified and engaged
- [ ] Technical Lead assigned
- [ ] Business Sponsor confirmed
- [ ] End User representatives identified

### 1.2 Stakeholder Communication
- [ ] Communication channels established
- [ ] Meeting cadence defined
- [ ] Escalation paths documented
- [ ] Decision-making process clear

**Stakeholder Gaps:**
- [ ] None ✅
- [ ] Gaps found ❌: [List missing stakeholders or processes]

## Section 2: Project Scope & Objectives
### 2.1 Scope Definition
- [ ] Project boundaries clearly defined
- [ ] In-scope features documented
- [ ] Out-of-scope items explicitly stated
- [ ] Scope change process established

### 2.2 Business Objectives
- [ ] Business goals clearly articulated
- [ ] Success criteria measurable
- [ ] Value proposition defined
- [ ] ROI expectations set

**Scope Issues:**
- [ ] None ✅
- [ ] Issues found ❌: [List scope concerns]

## Section 3: Resource Planning
### 3.1 Team Composition
- [ ] Required roles identified
- [ ] Skills matrix completed
- [ ] Team capacity assessed
- [ ] Training needs identified

### 3.2 Infrastructure & Tools
- [ ] Development environment ready
- [ ] CI/CD pipeline configured
- [ ] Collaboration tools setup
- [ ] Monitoring tools identified

**Resource Gaps:**
- [ ] None ✅
- [ ] Gaps found ❌: [List resource constraints]

## Section 4: Technical Standards
### 4.1 Development Standards
- [ ] Coding standards documented
- [ ] Code review process defined
- [ ] Testing standards established
- [ ] Documentation requirements set

### 4.2 Architecture Standards
- [ ] Architecture principles defined
- [ ] Technology stack approved
- [ ] Integration patterns established
- [ ] Security standards documented

**Standards Issues:**
- [ ] None ✅
- [ ] Issues found ❌: [List standards gaps]

## Section 5: Dependencies & Risks
### 5.1 Project Dependencies
- [ ] External dependencies identified
- [ ] Internal dependencies mapped
- [ ] Dependency risks assessed
- [ ] Mitigation strategies defined

### 5.2 Risk Management
- [ ] Risk register created
- [ ] Risk owners assigned
- [ ] Mitigation plans documented
- [ ] Risk review schedule set

**Risk Level:**
- [ ] Low risk ✅
- [ ] Medium risk ⚠️: [List medium risks]
- [ ] High risk ❌: [List critical risks]

## Section 6: Success Metrics & Monitoring
### 6.1 Project Metrics
- [ ] KPIs defined and measurable
- [ ] Baseline metrics established
- [ ] Target values set
- [ ] Measurement methods defined

### 6.2 Quality Gates
- [ ] Quality checkpoints established
- [ ] Acceptance criteria defined
- [ ] Review processes documented
- [ ] Go/No-go criteria set

**Metrics Gaps:**
- [ ] None ✅
- [ ] Gaps found ❌: [List metrics issues]

## Project Type Specific Validation

{{#if PROJECT_TYPE.greenfield}}
### Greenfield Project Checks
- [ ] Technology stack selection justified
- [ ] Architecture patterns established
- [ ] Development methodology chosen
- [ ] Initial backlog created
- [ ] MVP scope defined
{{/if}}

{{#if PROJECT_TYPE.brownfield}}
### Brownfield Project Checks
- [ ] Existing system documented
- [ ] Integration points identified
- [ ] Migration strategy defined
- [ ] Backward compatibility planned
- [ ] Technical debt assessed
{{/if}}

{{#if PROJECT_TYPE.fullstack}}
### Full-Stack Project Checks
- [ ] Frontend framework selected
- [ ] Backend architecture defined
- [ ] API design approach set
- [ ] Database strategy established
- [ ] Frontend-backend integration planned
{{/if}}

{{#if PROJECT_TYPE.backend}}
### Backend-Only Project Checks
- [ ] API design standards set
- [ ] Service architecture defined
- [ ] Database design completed
- [ ] Integration approach documented
- [ ] Performance requirements set
{{/if}}

{{#if PROJECT_TYPE.mobile}}
### Mobile Project Checks
- [ ] Platform targets defined (iOS/Android)
- [ ] Development approach chosen (Native/Hybrid)
- [ ] App store requirements reviewed
- [ ] Device compatibility matrix set
- [ ] Offline capabilities planned
{{/if}}

## Validation Summary

### Overall Setup Score: [_/10]

**Score Breakdown:**
- Stakeholder Alignment: [_/10]
- Project Scope & Objectives: [_/10]
- Resource Planning: [_/10]
- Technical Standards: [_/10]
- Dependencies & Risks: [_/10]
- Success Metrics: [_/10]
- Project-Type Specific: [_/10]

### Setup Decision
**Project Setup Status:**
- [ ] **READY** - Project ready to proceed ✅
- [ ] **CONDITIONAL** - Proceed with caveats ⚠️
- [ ] **BLOCKED** - Critical issues must be resolved ❌

### Critical Issues (Must Fix)
1. [Issue description and impact on project]
2. [Additional critical issues]

### Recommendations (Should Fix)
1. [Setup improvement recommendation]
2. [Additional recommendations]

### Next Steps
- [ ] Proceed to development planning
- [ ] Address critical issues
- [ ] Schedule kickoff meeting
- [ ] Finalize project charter

---
**Setup Validation Completed:** {{DATE}}  
**Project Start Date:** [Date]  
**First Milestone:** [Date and deliverable]