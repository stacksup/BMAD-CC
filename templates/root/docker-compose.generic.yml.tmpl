version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "{{FRONTEND_PORT}}:{{FRONTEND_PORT}}"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - /app/dist
    environment:
      - NODE_ENV=development
      - PORT={{FRONTEND_PORT}}
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:{{FRONTEND_PORT}}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Optional: Database service
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB={{PROJECT_NAME}}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Cache service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: {{PROJECT_NAME}}_network